#!/bin/bash
echo $1
if [[ $1 == "bot" ]] ; then 
    sep="%{T2}%{T-}"
else
    sep="%{T2}%{T-}"
fi

print_bytes() {
    if [ "$1" -eq 0 ] || [ "$1" -lt 1000 ]; then
        bytes="0 kB/s"
    elif [ "$1" -lt 1000000 ]; then
        bytes="$(echo "$1/1000" | bc -l | LANG=C xargs printf "%.f\n") kB/s"
    else
        bytes="$(echo "$1/1000000" | bc -l | LANG=C xargs printf "%.1f\n") MB/s"
    fi
    if [ ${#bytes} -gt 9 ]; then
        echo "$bytes"
    else
        pad=$((9-${#bytes}))
        for ((i = 0;i<$pad;i++)); do 
            echo -n " "
        done
        echo "$bytes"
    fi
}

print_bit() {
    if [ "$1" -eq 0 ] || [ "$1" -lt 10 ]; then
        bit="0 B"
    elif [ "$1" -lt 100 ]; then
        bit="$(echo "$1*8" | bc -l | LANG=C xargs printf "%.f\n") B"
    elif [ "$1" -lt 100000 ]; then
        bit="$(echo "$1*8/1000" | bc -l | LANG=C xargs printf "%.f\n") K"
    else
        bit="$(echo "$1*8/1000000" | bc -l | LANG=C xargs printf "%.1f\n") M"
    fi

    echo "$bit"
}

INTERVAL=1
if [[ $(uname -n) == "PC-Main" ]] || [[ $(uname -n) == "archlinux" ]];then 
    INTERFACES="enp5s0"
elif [[ $(uname -n) == "arch-steamdeck" ]] || [[ $(uname -n) == "adconova-pc" ]];then 
    INTERFACES="wlan0"
else 
    INTERFACES="wlp6s0"
fi
    
    

declare -A bytes

for interface in $INTERFACES; do
    bytes[past_rx_$interface]="$(cat /sys/class/net/"$interface"/statistics/rx_bytes)"
    bytes[past_tx_$interface]="$(cat /sys/class/net/"$interface"/statistics/tx_bytes)"
done

while true; do
    down=0
    up=0
    wget -q --spider http://google.com

    if [ $? -eq 0 ]; then
        for interface in $INTERFACES; do
            bytes[now_rx_$interface]="$(cat /sys/class/net/"$interface"/statistics/rx_bytes)"
            bytes[now_tx_$interface]="$(cat /sys/class/net/"$interface"/statistics/tx_bytes)"

            bytes_down=$((((${bytes[now_rx_$interface]} - ${bytes[past_rx_$interface]})) / INTERVAL))
            bytes_up=$((((${bytes[now_tx_$interface]} - ${bytes[past_tx_$interface]})) / INTERVAL))

            down=$(((( "$down" + "$bytes_down" ))))
            up=$(((( "$up" + "$bytes_up" ))))

            bytes[past_rx_$interface]=${bytes[now_rx_$interface]}
            bytes[past_tx_$interface]=${bytes[now_tx_$interface]}
        done
        echo "  $(print_bytes $down) $sep  $(print_bytes $up)"
    else 
        echo "      %{F#E06C75}%{F-}      $sep     %{F#E06C75}%{F-}    "
    fi
        sleep $INTERVAL
done
